package ch38_sync

import (
	"log"
	"math/rand"
	"sync"
	"testing"
	"time"
)

func TestSyncCond(t *testing.T) {
	c := sync.NewCond(&sync.Mutex{})
	var ready int

	for i := 0; i < 10; i++ {
		go func(i int) {
			time.Sleep(time.Duration(rand.Int63n(10)) * time.Second)
			// 加锁更改等待条件
			c.L.Lock()
			ready++
			c.L.Unlock()

			log.Printf("运动员#%d 已准备就绪\n", i)
			// 广播唤醒所有的等待者
			c.Broadcast()
		}(i)
	}

	c.L.Lock()
	for ready != 10 {
		c.Wait()
		log.Println("裁判员被唤醒一次")
	}
	c.L.Unlock()

	// 所有的运动员是否就绪
	log.Println("所有运动员都准备就绪。比赛开始，3，2，1, ......")

	// Output:
	// 2023/11/10 20:58:27 运动员#1 已准备就绪
	// 2023/11/10 20:58:27 裁判员被唤醒一次
	// 2023/11/10 20:58:28 运动员#9 已准备就绪
	// 2023/11/10 20:58:28 裁判员被唤醒一次
	// 2023/11/10 20:58:29 运动员#6 已准备就绪
	// 2023/11/10 20:58:29 裁判员被唤醒一次
	// 2023/11/10 20:58:30 运动员#5 已准备就绪
	// 2023/11/10 20:58:30 裁判员被唤醒一次
	// 2023/11/10 20:58:30 运动员#4 已准备就绪
	// 2023/11/10 20:58:30 裁判员被唤醒一次
	// 2023/11/10 20:58:30 运动员#8 已准备就绪
	// 2023/11/10 20:58:30 裁判员被唤醒一次
	// 2023/11/10 20:58:33 运动员#7 已准备就绪
	// 2023/11/10 20:58:33 裁判员被唤醒一次
	// 2023/11/10 20:58:34 运动员#0 已准备就绪
	// 2023/11/10 20:58:34 裁判员被唤醒一次
	// 2023/11/10 20:58:35 运动员#3 已准备就绪
	// 2023/11/10 20:58:35 裁判员被唤醒一次
	// 2023/11/10 20:58:35 运动员#2 已准备就绪
	// 2023/11/10 20:58:35 所有运动员都准备就绪。比赛开始，3，2，1, ......
}
